<?xml version="1.0"?>
<robot name="diff_drive_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:arg name="namespace" default="robot_0"/>
    <!-- <xacro:property name="pi" value="3.14159265358979323846"/> -->
    <xacro:property name="base_radius" value="0.15"/>
    <xacro:property name="base_length" value="0.10"/>
    <xacro:property name="wheel_radius" value="0.04"/>
    <xacro:property name="wheel_length" value="0.04"/>
    <xacro:property name="wheel_mass" value="0.05"/>
    <xacro:property name="caster_radius" value="${wheel_radius / 2}"/>
    <xacro:property name="caster_mass" value="0.03"/>

    <xacro:macro name="cylinder_inertia" params="mass radius length">
        <inertia
            ixx="${mass * (3 * radius * radius + length * length) / 12}"
            ixy="0.0"
            ixz="0.0"
            iyy="${mass * (3 * radius * radius + length * length) / 12}"
            iyz="0.0"
            izz="${mass * radius * radius / 2}"
        />
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="mass radius">
        <inertia ixx="${2 * mass * radius * radius / 3}"
            ixy="0.0"
            ixz="0.0"
            iyy="${2 * mass * radius * radius / 3}"
            iyz="0.0"
            izz="${2 * mass * radius * radius / 3}"
        />
    </xacro:macro>

    <!-- base_link -->
    <link name="base_footprint"/>

    <link name="base_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="1.0"/>
            <xacro:cylinder_inertia mass="1.0" radius="${base_radius}" length="${base_length}"/>
        </inertial>
    </link>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 ${wheel_radius + base_length / 2}"/>
    </joint>

    <!-- wheel_link -->
    <link name="left_wheel_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
            <material name="black">
                <color rgba="0.0 0.0 0.0 0.5"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${wheel_mass}"/>
            <xacro:cylinder_inertia mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}"/>
        </inertial>
    </link>

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <origin xyz="0.0 ${base_radius + wheel_length / 2} ${-base_length / 2}"/>
        <axis xyz="0.0 1.0 0.0"/>
    </joint>

    <gazebo reference="left_wheel_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <link name="right_wheel_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
            <material name="black">
                <color rgba="0.0 0.0 0.0 0.5"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${wheel_mass}"/>
            <xacro:cylinder_inertia mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}"/>
        </inertial>
    </link>

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel_link"/>
        <origin xyz="0.0 ${-base_radius - wheel_length / 2} ${-base_length / 2}"/>
        <axis xyz="0.0 1.0 0.0"/>
    </joint>

    <gazebo reference="right_wheel_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- caster_link -->
    <link name="front_caster_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="gray">
                <color rgba="0.5 0.5 0.5 0.5"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${caster_mass}"/>
            <xacro:sphere_inertia mass="${caster_mass}" radius="${caster_radius}"/>
        </inertial>
    </link>

    <joint name="front_caster_joint" type="fixed">
        <parent link="base_link"/>
        <child link="front_caster_link"/>
        <origin xyz="0.11 0.0 ${-base_length / 2 - caster_radius + 0.001}"/>
    </joint>

    <gazebo reference="front_caster_link">
        <material>Gazebo/Gray</material>
        <mu1 value="0.0"/>
        <mu2 value="0.0"/>
        <kp value="1000000.0" />
        <kd value="10.0" />
    </gazebo>

    <link name="back_caster_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="gray">
                <color rgba="0.5 0.5 0.5 0.5"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="${caster_mass}"/>
            <xacro:sphere_inertia mass="${caster_mass}" radius="${caster_radius}"/>
        </inertial>
    </link>

    <joint name="back_caster_joint" type="fixed">
        <parent link="base_link"/>
        <child link="back_caster_link"/>
        <origin xyz="-0.11 0.0 ${-base_length / 2 - caster_radius + 0.001}"/>
    </joint>

    <gazebo reference="back_caster_link">
        <material>Gazebo/Gray</material>
        <mu1 value="0.0"/>
        <mu2 value="0.0"/>
        <kp value="1000000.0" />
        <kd value="10.0" />
    </gazebo>

    <!-- plugin -->
    <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <namespace>/$(arg namespace)</namespace>
                <remapping>cmd_vel:=cmd_vel</remapping>
                <remapping>odom:=odom</remapping>
            </ros>
            <update_rate>30</update_rate>
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <!-- kinematics -->
            <wheel_separation>${base_radius * 2 + wheel_length}</wheel_separation>
            <wheel_diameter>${wheel_radius * 2}</wheel_diameter>
            <!-- limits -->
            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>5.0</max_wheel_acceleration>
            <!-- output -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>false</publish_odom_tf>
            <publish_wheel_tf>false</publish_wheel_tf>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_footprint</robot_base_frame>
        </plugin>
    </gazebo>
</robot>